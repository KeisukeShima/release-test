name: Release Drafter

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - main

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.release-drafter.outputs.resolved_version }}
    steps:
      # (Optional) GitHub Enterprise requires GHE_HOST variable set
      #- name: Set GHE_HOST
      #  run: |
      #    echo "GHE_HOST=${GITHUB_SERVER_URL##https:\/\/}" >> $GITHUB_ENV

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - id: release-drafter
        uses: release-drafter/release-drafter@v6
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        with:
          commitish: main
        #   config-name: my-config.yml
        #   disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update_pyproject_version:
    runs-on: ubuntu-latest
    needs: update_release_draft
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: update version
        env:
          NEW_VERSION: ${{ needs.update_release_draft.outputs.new-version }}
        run: |
          sed -i "s/^version = \"[0-9.]*\"/version = \"$NEW_VERSION\"/" pyproject.toml

      - name: Create PR
        id: create-pr
        uses: peter-evans/create-pull-request@v6
        with:
          # token: ${{ inputs.token }}
          author: github-actions <github-actions@github.com>
          signoff: true
          delete-branch: true
